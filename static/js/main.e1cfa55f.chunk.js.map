{"version":3,"sources":["App.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","fetchData","axios","get","then","response","status","statusText","lastFour","data","url","substr","length","toLowerCase","setState","type","console","log","forceUpdate","catch","error","state","react_default","a","createElement","className","autoPlay","loop","muted","key","controls","src","alt","_this2","onClick","NewDogButton","GetDogMedia","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"2RAqGeA,cAhGb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KA6CRQ,UAAY,WACVC,IACGC,IAAI,gCACJC,KAAK,SAAAC,GACJ,GAAwB,MAApBA,EAASC,QAA0C,OAAxBD,EAASE,WAAqB,CAC3D,IAAIC,EAAWH,EAASI,KAAKC,IAC1BC,OAAON,EAASI,KAAKC,IAAIE,OAAS,GAClCC,cACHnB,EAAKoB,SAAS,CACZJ,IAAKL,EAASI,KAAKC,IACnBK,KAAMP,SAGRQ,QAAQC,IAAI,wBACZvB,EAAKoB,SAAS,CACZJ,IAAK,uBACLK,KAAM,OAGVrB,EAAKwB,gBAENC,MAAM,SAAAC,GACLJ,QAAQC,IAAI,wBACZvB,EAAKoB,SAAS,CAAEJ,IAAK,uBAAwBK,KAAM,UAnEvDrB,EAAK2B,MAAQ,CACXX,IAAK,KACLK,KAAM,MAJSrB,2EAQPD,GACV,IAAMsB,EAAOtB,EAAMsB,KACbL,EAAMjB,EAAMiB,IAClB,MAAa,SAATK,EAEAO,EAAAC,EAAAC,cAAA,SACEC,UAAU,WACVC,UAAU,EACVC,MAAI,EACJC,OAAO,EACPC,IAAKnB,EACLoB,UAAQ,GAERR,EAAAC,EAAAC,cAAA,UAAQO,IAAKrB,EAAKK,KAAK,eAGT,SAATA,EAEPO,EAAAC,EAAAC,cAAA,SACEC,UAAU,WACVC,UAAU,EACVC,MAAI,EACJC,OAAO,EACPC,IAAKnB,EACLoB,UAAQ,GAERR,EAAAC,EAAAC,cAAA,UAAQO,IAAKrB,EAAKK,KAAK,gBAGT,OAATA,EACFO,EAAAC,EAAAC,cAAA,UAGLF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWM,IAAKrB,EAAKmB,IAAKnB,EAAKsB,IAAI,gEAiCtDnC,KAAKI,mDAGQ,IAAAgC,EAAApC,KACb,OAAOyB,EAAAC,EAAAC,cAAA,UAAQU,QAAS,kBAAMD,EAAKhC,cAA5B,kDAIP,OACEqB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAChBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,wBACC5B,KAAKsC,gBAERb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA3B,KAAMuC,YAAN,CAAkB1B,IAAKb,KAAKwB,MAAMX,IAAKK,KAAMlB,KAAKwB,MAAMN,gBA1FhDsB,aCElBC,IAASC,OAAOjB,EAAAC,EAAAC,cAACgB,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.e1cfa55f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport axios from \"axios\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      url: null,\r\n      type: null\r\n    };\r\n  }\r\n\r\n  GetDogMedia(props) {\r\n    const type = props.type;\r\n    const url = props.url;\r\n    if (type === \".mp4\") {\r\n      return (\r\n        <video\r\n          className=\"dogMedia\"\r\n          autoPlay={true}\r\n          loop\r\n          muted={true}\r\n          key={url}\r\n          controls\r\n        >\r\n          <source src={url} type=\"video/mp4\" />\r\n        </video>\r\n      );\r\n    } else if (type === \"webm\") {\r\n      return (\r\n        <video\r\n          className=\"dogMedia\"\r\n          autoPlay={true}\r\n          loop\r\n          muted={true}\r\n          key={url}\r\n          controls\r\n        >\r\n          <source src={url} type=\"video/webm\" />\r\n        </video>\r\n      );\r\n    } else if (type === null) {\r\n      return <p />;\r\n    } else {\r\n      return (\r\n        <img className=\"dogMedia\" src={url} key={url} alt=\"Broken Dog Link\" />\r\n      );\r\n    }\r\n  }\r\n\r\n  fetchData = () => {\r\n    axios\r\n      .get(\"https://random.dog/woof.json\")\r\n      .then(response => {\r\n        if (response.status === 200 && response.statusText === \"OK\") {\r\n          let lastFour = response.data.url\r\n            .substr(response.data.url.length - 4)\r\n            .toLowerCase();\r\n          this.setState({\r\n            url: response.data.url,\r\n            type: lastFour\r\n          });\r\n        } else {\r\n          console.log(\"Error getting dog :(\");\r\n          this.setState({\r\n            url: \"Error getting dog :(\",\r\n            type: null\r\n          });\r\n        }\r\n        this.forceUpdate();\r\n      })\r\n      .catch(error => {\r\n        console.log(\"Error getting dog :(\");\r\n        this.setState({ url: \"Error getting dog :(\", type: null });\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchData();\r\n  }\r\n\r\n  NewDogButton() {\r\n    return <button onClick={() => this.fetchData()}>Get a New Dog</button>;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <h1 className=\"App-title\">Random Dog Generator</h1>\r\n          {this.NewDogButton()}\r\n        </header>\r\n        <div className=\"dogContainer\">\r\n          <this.GetDogMedia url={this.state.url} type={this.state.type} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n//import registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n//registerServiceWorker();\r\n"],"sourceRoot":""}